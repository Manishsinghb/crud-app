{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bisht\\\\Desktop\\\\crud application\\\\crud-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import './App.css';\nimport React, { useState } from 'react';\nimport 'react-responsive-modal/styles.css';\nimport { PlusCircle, Edit, Trash2, ChevronUp, ChevronDown } from 'react-feather';\nimport { Modal } from 'react-responsive-modal';\n\nfunction App() {\n\n  const blankuser = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"address\": \"\"\n  }\n\n  const [open, setOpen] = useState(false);\n  const [action, setAction] = useState('Add');\n  const [userdata, setUserdata] = useState([]);\n  const [user, setUser] = useState(blankuser);\n  const [editIndex, setEditIndex] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: '', direction: '' });\n  const [searchTerm, setSearchTerm] = useState(''); // State to store the search term\n\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setOpen(false);\n    setAction('Add');\n  }\n\n  const addUser = () => {\n    setUserdata([...userdata, user]);\n    setUser(blankuser);\n    onCloseModal();\n  }\n\n  const editUser = (index) => {\n    setAction('Edit');\n    const selectedUser = userdata.find((x, i) => i === index);\n    setUser(selectedUser);\n    setEditIndex(index);\n    onOpenModal();\n  }\n\n  const updateUser = () => {\n    const newUsers = userdata.map((x, i) => {\n      if (i === editIndex) {\n        return user;\n      }\n      return x;\n    });\n    setUserdata(newUsers);\n    setUser(blankuser);\n    setEditIndex(null);\n    onCloseModal();\n  }\n\n  const deleteUser = (index) => {\n    const newUsers = userdata.filter((x, i) => i !== index);\n    setUserdata(newUsers);\n  }\n\n  const sortUsers = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    const sortedData = [...userdata].sort((a, b) => {\n      if (a[key] < b[key]) {\n        return direction === 'ascending' ? -1 : 1;\n      }\n      if (a[key] > b[key]) {\n        return direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n\n    setSortConfig({ key, direction });\n    setUserdata(sortedData);\n  }\n\n  // Function to filter users by email search term\n  const filteredUsers = userdata.filter((user) =>\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex\">\n        <h1>CRUD APP</h1>\n      </div>\n      <div className=\"toolbar\">\n        <button className='btn btn-p' onClick={onOpenModal}>\n          <PlusCircle size={16}></PlusCircle>\n          <span>Add</span>\n        </button>\n\n        {}\n        <input\n          type=\"text\"\n          placeholder=\"Search by email\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"search-input\"\n        />\n      </div>\n      <hr />\n      <table className='table'>\n        <thead>\n          <tr>\n            <th onClick={() => sortUsers('name')}>\n              Name {sortConfig.key === 'name' && (sortConfig.direction === 'ascending' ? <ChevronUp size={16} /> : <ChevronDown size={16} />)}\n            </th>\n            <th onClick={() => sortUsers('email')}>\n              Email {sortConfig.key === 'email' && (sortConfig.direction === 'ascending' ? <ChevronUp size={16} /> : <ChevronDown size={16} />)}\n            </th>\n            <th onClick={() => sortUsers('address')}>\n              Address {sortConfig.key === 'address' && (sortConfig.direction === 'ascending' ? <ChevronUp size={16} /> : <ChevronDown size={16} />)}\n            </th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredUsers.length > 0 && filteredUsers.map((user, index) => {\n            return (\n              <tr key={index}>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.address}</td>\n                <td>\n                  <button className='btn ml2' onClick={() => editUser(index)}>\n                    <Edit size={16}></Edit>\n                    <span>Edit</span>\n                  </button>\n                  <button className='btn ml2' onClick={() => deleteUser(index)}>\n                    <Trash2 size={16}></Trash2>\n                    <span>Delete</span>\n                  </button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\n      <Modal open={open} onClose={onCloseModal} center>\n        <h2>{action} User</h2>\n        <div className='form'>\n          <label htmlFor=\"\">Name</label>\n          <input type=\"text\" value={user.name} onChange={(e) => setUser({ ...user, \"name\": e.target.value })} />\n          <label htmlFor=\"\">Email</label>\n          <input type=\"text\" value={user.email} onChange={(e) => setUser({ ...user, \"email\": e.target.value })} />\n          <label htmlFor=\"\">Address</label>\n          <textarea value={user.address} cols=\"30\" rows=\"5\" onChange={(e) => setUser({ ...user, \"address\": e.target.value })}></textarea>\n          {action === 'Add' && <button className='btn' onClick={() => addUser()}>Submit</button>}\n          {action === 'Edit' && <button className='btn' onClick={() => updateUser()}>Update</button>}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n\n\n*/\nimport './App.css';\nimport React, { useState } from 'react';\nimport 'react-responsive-modal/styles.css';\nimport { PlusCircle, Edit, Trash2 } from 'react-feather';\nimport { Modal } from 'react-responsive-modal';\nimport Search from './components/Search';\nimport Sort from './components/Sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const blankuser = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"address\": \"\"\n  };\n  const [open, setOpen] = useState(false);\n  const [action, setAction] = useState('Add');\n  const [userdata, setUserdata] = useState([]);\n  const [user, setUser] = useState(blankuser);\n  const [editIndex, setEditIndex] = useState(null);\n  const [sortConfig, setSortConfig] = useState({\n    key: '',\n    direction: ''\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setOpen(false);\n    setAction('Add');\n  };\n  const addUser = () => {\n    setUserdata([...userdata, user]);\n    setUser(blankuser);\n    onCloseModal();\n  };\n  const editUser = index => {\n    setAction('Edit');\n    const selectedUser = userdata.find((x, i) => i === index);\n    setUser(selectedUser);\n    setEditIndex(index);\n    onOpenModal();\n  };\n  const updateUser = () => {\n    const newUsers = userdata.map((x, i) => {\n      if (i === editIndex) {\n        return user;\n      }\n      return x;\n    });\n    setUserdata(newUsers);\n    setUser(blankuser);\n    setEditIndex(null);\n    onCloseModal();\n  };\n  const deleteUser = index => {\n    const newUsers = userdata.filter((x, i) => i !== index);\n    setUserdata(newUsers);\n  };\n  const sortUsers = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    const sortedData = [...userdata].sort((a, b) => {\n      if (a[key] < b[key]) {\n        return direction === 'ascending' ? -1 : 1;\n      }\n      if (a[key] > b[key]) {\n        return direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n    setSortConfig({\n      key,\n      direction\n    });\n    setUserdata(sortedData);\n  };\n\n  // Filter the user data by the search term (email)\n  const filteredUsers = userdata.filter(user => user.email.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CRUD APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-p\",\n        onClick: onOpenModal,\n        children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Sort, {\n            sortConfig: sortConfig,\n            sortUsers: sortUsers,\n            field: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Sort, {\n            sortConfig: sortConfig,\n            sortUsers: sortUsers,\n            field: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Sort, {\n            sortConfig: sortConfig,\n            sortUsers: sortUsers,\n            field: \"address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.length > 0 && filteredUsers.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn ml2\",\n                onClick: () => editUser(index),\n                children: [/*#__PURE__*/_jsxDEV(Edit, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn ml2\",\n                onClick: () => deleteUser(index),\n                children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: onCloseModal,\n      center: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [action, \" User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user.name,\n          onChange: e => setUser({\n            ...user,\n            \"name\": e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: user.email,\n          onChange: e => setUser({\n            ...user,\n            \"email\": e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: user.address,\n          cols: \"30\",\n          rows: \"5\",\n          onChange: e => setUser({\n            ...user,\n            \"address\": e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), action === 'Add' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => addUser(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 32\n        }, this), action === 'Edit' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => updateUser(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cr6ycUV4hgVZxmNSF1mTOWvXSLM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PlusCircle","Edit","Trash2","Modal","Search","Sort","jsxDEV","_jsxDEV","App","_s","blankuser","open","setOpen","action","setAction","userdata","setUserdata","user","setUser","editIndex","setEditIndex","sortConfig","setSortConfig","key","direction","searchTerm","setSearchTerm","onOpenModal","onCloseModal","addUser","editUser","index","selectedUser","find","x","i","updateUser","newUsers","map","deleteUser","filter","sortUsers","sortedData","sort","a","b","filteredUsers","email","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","field","length","name","address","onClose","center","htmlFor","type","value","onChange","e","target","cols","rows","_c","$RefreshReg$"],"sources":["C:/Users/bisht/Desktop/crud application/crud-app/src/App.js"],"sourcesContent":["/*import './App.css';\nimport React, { useState } from 'react';\nimport 'react-responsive-modal/styles.css';\nimport { PlusCircle, Edit, Trash2, ChevronUp, ChevronDown } from 'react-feather';\nimport { Modal } from 'react-responsive-modal';\n\nfunction App() {\n\n  const blankuser = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"address\": \"\"\n  }\n\n  const [open, setOpen] = useState(false);\n  const [action, setAction] = useState('Add');\n  const [userdata, setUserdata] = useState([]);\n  const [user, setUser] = useState(blankuser);\n  const [editIndex, setEditIndex] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: '', direction: '' });\n  const [searchTerm, setSearchTerm] = useState(''); // State to store the search term\n\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setOpen(false);\n    setAction('Add');\n  }\n\n  const addUser = () => {\n    setUserdata([...userdata, user]);\n    setUser(blankuser);\n    onCloseModal();\n  }\n\n  const editUser = (index) => {\n    setAction('Edit');\n    const selectedUser = userdata.find((x, i) => i === index);\n    setUser(selectedUser);\n    setEditIndex(index);\n    onOpenModal();\n  }\n\n  const updateUser = () => {\n    const newUsers = userdata.map((x, i) => {\n      if (i === editIndex) {\n        return user;\n      }\n      return x;\n    });\n    setUserdata(newUsers);\n    setUser(blankuser);\n    setEditIndex(null);\n    onCloseModal();\n  }\n\n  const deleteUser = (index) => {\n    const newUsers = userdata.filter((x, i) => i !== index);\n    setUserdata(newUsers);\n  }\n\n  const sortUsers = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    const sortedData = [...userdata].sort((a, b) => {\n      if (a[key] < b[key]) {\n        return direction === 'ascending' ? -1 : 1;\n      }\n      if (a[key] > b[key]) {\n        return direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n\n    setSortConfig({ key, direction });\n    setUserdata(sortedData);\n  }\n\n  // Function to filter users by email search term\n  const filteredUsers = userdata.filter((user) =>\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex\">\n        <h1>CRUD APP</h1>\n      </div>\n      <div className=\"toolbar\">\n        <button className='btn btn-p' onClick={onOpenModal}>\n          <PlusCircle size={16}></PlusCircle>\n          <span>Add</span>\n        </button>\n\n        {}\n        <input\n          type=\"text\"\n          placeholder=\"Search by email\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"search-input\"\n        />\n      </div>\n      <hr />\n      <table className='table'>\n        <thead>\n          <tr>\n            <th onClick={() => sortUsers('name')}>\n              Name {sortConfig.key === 'name' && (sortConfig.direction === 'ascending' ? <ChevronUp size={16} /> : <ChevronDown size={16} />)}\n            </th>\n            <th onClick={() => sortUsers('email')}>\n              Email {sortConfig.key === 'email' && (sortConfig.direction === 'ascending' ? <ChevronUp size={16} /> : <ChevronDown size={16} />)}\n            </th>\n            <th onClick={() => sortUsers('address')}>\n              Address {sortConfig.key === 'address' && (sortConfig.direction === 'ascending' ? <ChevronUp size={16} /> : <ChevronDown size={16} />)}\n            </th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredUsers.length > 0 && filteredUsers.map((user, index) => {\n            return (\n              <tr key={index}>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.address}</td>\n                <td>\n                  <button className='btn ml2' onClick={() => editUser(index)}>\n                    <Edit size={16}></Edit>\n                    <span>Edit</span>\n                  </button>\n                  <button className='btn ml2' onClick={() => deleteUser(index)}>\n                    <Trash2 size={16}></Trash2>\n                    <span>Delete</span>\n                  </button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\n      <Modal open={open} onClose={onCloseModal} center>\n        <h2>{action} User</h2>\n        <div className='form'>\n          <label htmlFor=\"\">Name</label>\n          <input type=\"text\" value={user.name} onChange={(e) => setUser({ ...user, \"name\": e.target.value })} />\n          <label htmlFor=\"\">Email</label>\n          <input type=\"text\" value={user.email} onChange={(e) => setUser({ ...user, \"email\": e.target.value })} />\n          <label htmlFor=\"\">Address</label>\n          <textarea value={user.address} cols=\"30\" rows=\"5\" onChange={(e) => setUser({ ...user, \"address\": e.target.value })}></textarea>\n          {action === 'Add' && <button className='btn' onClick={() => addUser()}>Submit</button>}\n          {action === 'Edit' && <button className='btn' onClick={() => updateUser()}>Update</button>}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n\n\n*/\nimport './App.css';\nimport React, { useState } from 'react';\nimport 'react-responsive-modal/styles.css';\nimport { PlusCircle, Edit, Trash2 } from 'react-feather';\nimport { Modal } from 'react-responsive-modal';\nimport Search from './components/Search';\nimport Sort from './components/Sort';\n\nfunction App() {\n\n  const blankuser = {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"address\": \"\"\n  }\n\n  const [open, setOpen] = useState(false);\n  const [action, setAction] = useState('Add');\n  const [userdata, setUserdata] = useState([]);\n  const [user, setUser] = useState(blankuser);\n  const [editIndex, setEditIndex] = useState(null);\n  const [sortConfig, setSortConfig] = useState({ key: '', direction: '' });\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const onOpenModal = () => setOpen(true);\n  const onCloseModal = () => {\n    setOpen(false);\n    setAction('Add');\n  }\n\n  const addUser = () => {\n    setUserdata([...userdata, user]);\n    setUser(blankuser);\n    onCloseModal();\n  }\n\n  const editUser = (index) => {\n    setAction('Edit');\n    const selectedUser = userdata.find((x, i) => i === index);\n    setUser(selectedUser);\n    setEditIndex(index);\n    onOpenModal();\n  }\n\n  const updateUser = () => {\n    const newUsers = userdata.map((x, i) => {\n      if (i === editIndex) {\n        return user;\n      }\n      return x;\n    });\n    setUserdata(newUsers);\n    setUser(blankuser);\n    setEditIndex(null);\n    onCloseModal();\n  }\n\n  const deleteUser = (index) => {\n    const newUsers = userdata.filter((x, i) => i !== index);\n    setUserdata(newUsers);\n  }\n\n  const sortUsers = (key) => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    const sortedData = [...userdata].sort((a, b) => {\n      if (a[key] < b[key]) {\n        return direction === 'ascending' ? -1 : 1;\n      }\n      if (a[key] > b[key]) {\n        return direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n\n    setSortConfig({ key, direction });\n    setUserdata(sortedData);\n  }\n\n  // Filter the user data by the search term (email)\n  const filteredUsers = userdata.filter((user) =>\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex\">\n        <h1>CRUD APP</h1>\n      </div>\n      <div className=\"toolbar\">\n        <button className='btn btn-p' onClick={onOpenModal}>\n          <PlusCircle size={16}></PlusCircle>\n          <span>Add</span>\n        </button>\n\n        {/* Search Component */}\n        <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      </div>\n      <hr />\n      <table className='table'>\n        <thead>\n          <tr>\n            {/* Sort components for sorting each column */}\n            <Sort sortConfig={sortConfig} sortUsers={sortUsers} field=\"name\" />\n            <Sort sortConfig={sortConfig} sortUsers={sortUsers} field=\"email\" />\n            <Sort sortConfig={sortConfig} sortUsers={sortUsers} field=\"address\" />\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredUsers.length > 0 && filteredUsers.map((user, index) => {\n            return (\n              <tr key={index}>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.address}</td>\n                <td>\n                  <button className='btn ml2' onClick={() => editUser(index)}>\n                    <Edit size={16}></Edit>\n                    <span>Edit</span>\n                  </button>\n                  <button className='btn ml2' onClick={() => deleteUser(index)}>\n                    <Trash2 size={16}></Trash2>\n                    <span>Delete</span>\n                  </button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\n      <Modal open={open} onClose={onCloseModal} center>\n        <h2>{action} User</h2>\n        <div className='form'>\n          <label htmlFor=\"\">Name</label>\n          <input type=\"text\" value={user.name} onChange={(e) => setUser({ ...user, \"name\": e.target.value })} />\n          <label htmlFor=\"\">Email</label>\n          <input type=\"text\" value={user.email} onChange={(e) => setUser({ ...user, \"email\": e.target.value })} />\n          <label htmlFor=\"\">Address</label>\n          <textarea value={user.address} cols=\"30\" rows=\"5\" onChange={(e) => setUser({ ...user, \"address\": e.target.value })}></textarea>\n          {action === 'Add' && <button className='btn' onClick={() => addUser()}>Submit</button>}\n          {action === 'Edit' && <button className='btn' onClick={() => updateUser()}>Update</button>}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}